[2020-03-19 10:06:06,319] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@198e2867, name=log4j:logger=kafka.server.controller (kafka.server.controller)
[2020-03-19 10:06:30,883] INFO [ControllerEventThread controllerId=0] Starting (kafka.server.controller.ControllerEventManager$ControllerEventThread)
[2020-03-19 10:06:30,932] INFO [Controller id=0] 0 successfully elected as the server.controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.server.controller.KafkaController)
[2020-03-19 10:06:30,932] INFO [Controller id=0] Registering handlers (kafka.server.controller.KafkaController)
[2020-03-19 10:06:30,939] INFO [Controller id=0] Deleting log dir event notifications (kafka.server.controller.KafkaController)
[2020-03-19 10:06:30,942] INFO [Controller id=0] Deleting isr change notifications (kafka.server.controller.KafkaController)
[2020-03-19 10:06:30,944] INFO [Controller id=0] Initializing server.controller context (kafka.server.controller.KafkaController)
[2020-03-19 10:06:30,978] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.server.controller.KafkaController)
[2020-03-19 10:06:30,983] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.server.controller.KafkaController)
[2020-03-19 10:06:30,989] DEBUG [Channel manager on server.controller 0]: Controller 0 trying to connect to broker 0 (kafka.server.controller.ControllerChannelManager)
[2020-03-19 10:06:31,000] INFO [RequestSendThread controllerId=0] Starting (kafka.server.controller.RequestSendThread)
[2020-03-19 10:06:31,001] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,001] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,002] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,002] INFO [Controller id=0] Fetching topic deletions in progress (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,004] INFO [Controller id=0] List of topics to be deleted:  (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,004] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,005] INFO [Controller id=0] Initializing topic deletion manager (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,005] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.server.controller.TopicDeletionManager)
[2020-03-19 10:06:31,005] INFO [Controller id=0] Sending update metadata request (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,024] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.server.controller.ZkReplicaStateMachine)
[2020-03-19 10:06:31,025] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.server.controller.ZkReplicaStateMachine)
[2020-03-19 10:06:31,032] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.server.controller.ZkReplicaStateMachine)
[2020-03-19 10:06:31,032] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.server.controller.ZkReplicaStateMachine)
[2020-03-19 10:06:31,033] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.server.controller.ZkPartitionStateMachine)
[2020-03-19 10:06:31,034] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.server.controller.ZkPartitionStateMachine)
[2020-03-19 10:06:31,039] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.server.controller.ZkPartitionStateMachine)
[2020-03-19 10:06:31,040] INFO [Controller id=0] Ready to serve as the new server.controller with epoch 1 (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,042] INFO [RequestSendThread controllerId=0] Controller 0 connected to calvins-mbp-2.lan:9092 (id: 0 rack: null) for sending state change requests (kafka.server.controller.RequestSendThread)
[2020-03-19 10:06:31,049] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,049] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,049] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,050] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,051] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.server.controller.KafkaController)
[2020-03-19 10:06:31,093] INFO [Controller id=0] Starting the server.controller scheduler (kafka.server.controller.KafkaController)
[2020-03-19 10:06:36,096] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.server.controller.KafkaController)
[2020-03-19 10:06:36,097] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.server.controller.KafkaController)
[2020-03-19 10:06:36,099] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.server.controller.KafkaController)
[2020-03-19 10:11:36,114] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.server.controller.KafkaController)
[2020-03-19 10:11:36,117] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.server.controller.KafkaController)
[2020-03-19 10:11:36,117] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.server.controller.KafkaController)
[2020-03-19 10:16:36,130] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.server.controller.KafkaController)
[2020-03-19 10:16:36,132] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.server.controller.KafkaController)
[2020-03-19 10:16:36,133] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.server.controller.KafkaController)
[2020-03-19 10:21:36,140] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.server.controller.KafkaController)
[2020-03-19 10:21:36,142] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.server.controller.KafkaController)
[2020-03-19 10:21:36,142] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.server.controller.KafkaController)
[2020-03-19 10:26:36,150] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.server.controller.KafkaController)
[2020-03-19 10:26:36,150] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.server.controller.KafkaController)
[2020-03-19 10:26:36,151] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.server.controller.KafkaController)
[2020-03-19 10:31:36,167] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.server.controller.KafkaController)
[2020-03-19 10:31:36,171] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.server.controller.KafkaController)
[2020-03-19 10:31:36,172] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.server.controller.KafkaController)
[2020-03-19 10:36:36,183] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.server.controller.KafkaController)
[2020-03-19 10:36:36,184] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.server.controller.KafkaController)
[2020-03-19 10:36:36,187] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.server.controller.KafkaController)
[2020-03-19 10:41:36,196] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.server.controller.KafkaController)
[2020-03-19 10:41:36,198] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.server.controller.KafkaController)
[2020-03-19 10:41:36,200] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.server.controller.KafkaController)
[2020-03-19 10:46:36,210] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.server.controller.KafkaController)
[2020-03-19 10:46:36,213] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.server.controller.KafkaController)
[2020-03-19 10:46:36,215] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.server.controller.KafkaController)
[2020-03-19 10:51:36,227] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.server.controller.KafkaController)
[2020-03-19 10:51:36,233] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.server.controller.KafkaController)
[2020-03-19 10:51:36,235] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.server.controller.KafkaController)
[2020-03-19 10:56:36,241] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.server.controller.KafkaController)
[2020-03-19 10:56:36,243] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.server.controller.KafkaController)
[2020-03-19 10:56:36,244] DEBUG [Controller id=0] Preferred replicas by broker HashMap() (kafka.server.controller.KafkaController)
